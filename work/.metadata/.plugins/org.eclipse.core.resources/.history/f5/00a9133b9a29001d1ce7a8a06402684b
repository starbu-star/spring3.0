package com.exe.board;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.persistence.FetchType;
import javax.transaction.Transactional;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertEquals;
@SpringBootTest
public class AnswerTest {
	@Autowired
	private QuestionRepository questionRepository;
	
	@Autowired
	private AnswerRepository answerRepository;
	
//	@Test
//	void replaySave() {
//		Optional<Question> op=questionRepository.findById(2); //2번에 해당되는 답글 달려고함
//		
//		assertTrue(op.isPresent());
//		Question q=op.get();
//		
//		Answer a = new Answer();
//		a.setContent("JPA는 ORM입니다.");
//		a.setQuestion(q);
//		a.setCreatedDate(LocalDateTime.now());
//		answerRepository.save(a);
//		
//	}
	@Test
	void replyFind() {
		Optional<Answer> op = answerRepository.findById(1); //답변1 찾겠다
		assertTrue(op.isPresent());
		
		Answer a = op.get();
		assertEquals(2, a.getQuestion().getId()); //question 의 id가 2번이 맞냐?
	}
	
	//질문에 달려있는 답변 찾기
	// @Transactional question 에  fetch = FetchType.EAGER추가 원하지 않을경우 이거 추가하면 된다.
	@Test
	void replyConnQuestion() {
		Optional<Question> op = questionRepository.findById(2);
		assertTrue(op.isPresent());
		
		Question q = op.get(); //질문 읽어와라
		
		//질문에 대한 답변은 answerList에 들어가있다.
		List<Answer> answerList = q.getAnswerList(); 
		
		assertEquals(2, answerList.size());
		assertEquals("JPA는 ORM입니다.", answerList.get(0).getContent());
		//쿼리연동시에는 상관없으나 테스트할때는 에러가 생김
		//question 에 ,fetch = FetchType.EAGER 이거 추가해주면 정상 실행된다.
		
	}

}
